{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","redux/contacts/contacts-operations.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-selector.js","components/Filter/Filter.js","components/Section/Section.js","App.js","redux/contacts/contacts-reducer.js","redux/store/store.js","index.js"],"names":["module","exports","ContactForm","onSubmit","useState","name","setName","number","setNumber","nameInputId","shortid","generate","telInputId","handleChange","e","currentTarget","value","reset","className","s","form","preventDefault","block","label","formLabel","htmlFor","type","onChange","id","formInput","placeholder","btnBlock","formBtn","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","data","contacts","message","addContact","contact","post","result","deleteContact","contactId","delete","ContactListItem","dispatch","useDispatch","contactListItem","contactsName","itemDesc","contactsBtn","onClick","ContactList","contactListlist","map","changeFilter","createAction","getContacts","state","getFilter","filter","Filter","useSelector","filterLabel","target","filterInput","Section","children","container","App","useEffect","findForbiddenName","forbiddenName","i","length","toLowerCase","findContact","normalizedFilter","includes","getFindContact","newContact","alert","createReducer","fulfilled","action","payload","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.928b0ede.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsName\":\"ContactListItem_contactsName__3fnDm\",\"contactsBtn\":\"ContactListItem_contactsBtn__2zi3Q\",\"contactListItem\":\"ContactListItem_contactListItem__NF1wW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1XCmL\",\"filterInput\":\"Filter_filterInput__Y9AoQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1g8iR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__KdAz8\",\"formLabel\":\"ContactForm_formLabel__2hJf3\",\"formInput\":\"ContactForm_formInput__3huGi\",\"formBtn\":\"ContactForm_formBtn__3OYk_\"};","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport shortid from 'shortid';\r\n\r\nexport default function ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameInputId = shortid.generate();\r\n  const telInputId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit({ name, number });\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <div className={s.block}>\r\n        <div className={s.label}>\r\n          <label className={s.formLabel} htmlFor={nameInputId}>\r\n            Name\r\n          </label>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          className={s.formInput}\r\n        />\r\n      </div>\r\n      <div className={s.block}>\r\n        <div className={s.label}>\r\n          <label className={s.formLabel} htmlFor={telInputId}>\r\n            Number\r\n          </label>\r\n        </div>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          placeholder=\"+380 (00) 000-00-00\"\r\n          id={nameInputId}\r\n          className={s.formInput}\r\n        />\r\n      </div>\r\n      <div className={s.btnBlock}>\r\n        <div>\r\n          <button className={s.formBtn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://61c2e32b9cfb8f0017a3e72f.mockapi.io/api';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.get(`/contacts`);\r\n      const contacts = data;\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/contacts', contact);\r\n      const result = data;\r\n      return result;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      await axios.delete(`/contacts/${contactId}`);\r\n      return contactId;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n","import PropTypes from 'prop-types';\r\nimport { deleteContact } from '../../../redux/contacts/contacts-operations';\r\nimport { useDispatch } from 'react-redux';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <li className={s.contactListItem}>\r\n      <p className={s.contactsName}>{name}:</p>\r\n      <p className={s.itemDesc}>{number}</p>\r\n      <button\r\n        className={s.contactsBtn}\r\n        type=\"button\"\r\n        onClick={() => dispatch(deleteContact(id))}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  number: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport ContactListItem from './ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts }) => {\r\n  return (\r\n    <ul className={s.contactListlist}>\r\n      {contacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          id={contact.id}\r\n          name={contact.name}\r\n          number={contact.number}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = { contacts: PropTypes.array };\r\n\r\nexport default ContactList;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('filter/change');\r\n","export const getContacts = state => state.contacts.contacts;\r\nexport const getFilter = state => state.contacts.filter;\r\n","import s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selector';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(getFilter);\r\n\r\n  const onChange = e => {\r\n    const { value } = e.target;\r\n    dispatch(changeFilter(value));\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <label className={s.filterLabel} htmlFor=\"filter\">\r\n          Find contacts by name\r\n        </label>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n        className={s.filterInput}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import s from './Section.module.css';\r\n\r\nconst Section = ({ children }) => (\r\n  <section className={s.container}>{children}</section>\r\n);\r\n\r\nexport default Section;\r\n","import ContactForm from './components/ContactForm';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\nimport Section from './components/Section';\r\nimport { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts, getFilter } from './redux/contacts/contacts-selector';\r\nimport {\r\n  addContact,\r\n  fetchContacts,\r\n} from './redux/contacts/contacts-operations';\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const filter = useSelector(getFilter);\r\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\r\n\r\n  const addContacts = ({ name, number }) => {\r\n    const identicalName = findForbiddenName(name);\r\n    const newContact = {\r\n      name,\r\n      number,\r\n    };\r\n    if (!identicalName) {\r\n      dispatch(addContact(newContact));\r\n    } else {\r\n      alert(`${name} is already in contacts`);\r\n    }\r\n  };\r\n\r\n  const findForbiddenName = name => {\r\n    let forbiddenName = false;\r\n    for (let i = 0; i < contacts.length; i += 1) {\r\n      const normalizeContactsName = contacts[i].name.toLowerCase();\r\n      const normalizeName = name.toLowerCase();\r\n      if (normalizeContactsName === normalizeName) {\r\n        return (forbiddenName = true);\r\n      } else {\r\n        forbiddenName = false;\r\n      }\r\n    }\r\n    return forbiddenName;\r\n  };\r\n\r\n  const getFindContact = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  const findContact = getFindContact();\r\n\r\n  return (\r\n    <Section>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={addContacts} />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList contacts={findContact} />\r\n    </Section>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { changeFilter } from './contacts-actions';\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n} from './contacts-operations';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ contacts, filter });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contacts from '../contacts/contacts-reducer';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts,\r\n  },\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store/store';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}